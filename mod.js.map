{"version":3,"file":"mod.js","sources":["../088942ffc9cfa47b69124d027bb5ec","../lib/index.js"],"sourcesContent":["export default '/home/runner/work/math-strided-special-floor/math-strided-special-floor/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round each element in a strided array `x` toward negative infinity and assign the results to elements in a strided array `y`.\n*\n* @module @stdlib/math-strided-special-floor\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var floor = require( '@stdlib/math-strided-special-floor' );\n*\n* var x = new Float64Array( [ -1.5, 2.3, -3.9, 4.2, -5.0 ] );\n* var y = new Float64Array( [ 0.0, 0.0, 0.0, 0.0, 0.0 ] );\n*\n* floor( x.length, 'float64', x, 1, 'float64', y, 1 );\n* // y => <Float64Array>[ -2.0, 2.0, -4.0, 4.0, -5.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var floor = require( '@stdlib/math-strided-special-floor' );\n*\n* var x = new Float64Array( [ -1.5, 2.3, -3.9, 4.2, -5.0 ] );\n* var y = new Float64Array( [ 0.0, 0.0, 0.0, 0.0, 0.0 ] );\n*\n* floor.ndarray( x.length, 'float64', x, 1, 0, 'float64', y, 1, 0 );\n* // y => <Float64Array>[ -2.0, 2.0, -4.0, 4.0, -5.0 ]\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils-try-require' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( !(tmp instanceof Error) ) {\n\tmain = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["join","require","tryRequire"],"mappings":";;AAAA,ICgDAA,EAAAC,QAAA,QAAAD,KACAE,EAAAD,QAAA,6BACAA,QAAA,aAKAC,EAAAF,EDvDe,8ECuDf"}